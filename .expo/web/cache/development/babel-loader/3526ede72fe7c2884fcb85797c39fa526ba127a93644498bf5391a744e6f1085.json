{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GRID_SIZE = 20;\nvar CELL_SIZE = Math.floor(Dimensions.get('window').width / GRID_SIZE);\nvar directions = [[1, 0], [0, 1], [-1, 0], [0, -1]];\nexport default function App() {\n  var _useState = useState(Array(GRID_SIZE).fill().map(function () {\n      return Array(GRID_SIZE).fill(0);\n    })),\n    _useState2 = _slicedToArray(_useState, 2),\n    grid = _useState2[0],\n    setGrid = _useState2[1];\n  var _useState3 = useState({\n      x: Math.floor(GRID_SIZE / 2),\n      y: Math.floor(GRID_SIZE / 2),\n      direction: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    antPosition = _useState4[0],\n    setAntPosition = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRunning = _useState6[0],\n    setIsRunning = _useState6[1];\n  var moveAnt = function moveAnt() {\n    setGrid(function (currentGrid) {\n      var newGrid = currentGrid.map(function (row) {\n        return _toConsumableArray(row);\n      });\n      var x = antPosition.x,\n        y = antPosition.y,\n        direction = antPosition.direction;\n      var currentColor = newGrid[y][x];\n      newGrid[y][x] = currentColor === 0 ? 1 : 0;\n      var newDirection = direction;\n      if (currentColor === 0) {\n        newDirection = (direction + 1) % 4;\n      } else {\n        newDirection = (direction + 3) % 4;\n      }\n      var newX = x + directions[newDirection][0];\n      var newY = y + directions[newDirection][1];\n      if (newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE) {\n        setAntPosition({\n          x: newX,\n          y: newY,\n          direction: newDirection\n        });\n      }\n      return newGrid;\n    });\n  };\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(moveAnt, 100);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning, antPosition]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.grid,\n      children: grid.map(function (row, y) {\n        return _jsx(View, {\n          style: styles.row,\n          children: row.map(function (cell, x) {\n            return _jsx(View, {\n              style: [styles.cell, {\n                backgroundColor: cell === 1 ? 'black' : 'white'\n              }, antPosition.x === x && antPosition.y === y && styles.ant]\n            }, `${x}-${y}`);\n          })\n        }, y);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return setIsRunning(!isRunning);\n      },\n      children: _jsx(View, {\n        style: [styles.buttonInner, isRunning && styles.buttonStop]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grid: {\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: CELL_SIZE,\n    height: CELL_SIZE,\n    borderWidth: 0.5,\n    borderColor: '#ccc'\n  },\n  ant: {\n    backgroundColor: 'red'\n  },\n  button: {\n    marginTop: 20,\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#fff',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonInner: {\n    width: 20,\n    height: 20,\n    backgroundColor: '#4CAF50',\n    borderRadius: 3\n  },\n  buttonStop: {\n    backgroundColor: '#f44336'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","TouchableOpacity","Dimensions","jsx","_jsx","jsxs","_jsxs","GRID_SIZE","CELL_SIZE","Math","floor","get","width","directions","App","_useState","Array","fill","map","_useState2","_slicedToArray","grid","setGrid","_useState3","x","y","direction","_useState4","antPosition","setAntPosition","_useState5","_useState6","isRunning","setIsRunning","moveAnt","currentGrid","newGrid","row","_toConsumableArray","currentColor","newDirection","newX","newY","interval","setInterval","clearInterval","style","styles","container","children","cell","backgroundColor","ant","button","onPress","buttonInner","buttonStop","create","flex","alignItems","justifyContent","borderWidth","borderColor","flexDirection","height","marginTop","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"sources":["/Users/michaelnseula/code/LangtonAnt/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity, Dimensions } from 'react-native';\n\nconst GRID_SIZE = 20;\nconst CELL_SIZE = Math.floor(Dimensions.get('window').width / GRID_SIZE);\n\n// Directions: 0 = right, 1 = down, 2 = left, 3 = up\nconst directions = [[1, 0], [0, 1], [-1, 0], [0, -1]];\n\nexport default function App() {\n  const [grid, setGrid] = useState(\n    Array(GRID_SIZE).fill().map(() => Array(GRID_SIZE).fill(0))\n  );\n  const [antPosition, setAntPosition] = useState({\n    x: Math.floor(GRID_SIZE / 2),\n    y: Math.floor(GRID_SIZE / 2),\n    direction: 0\n  });\n  const [isRunning, setIsRunning] = useState(false);\n\n  const moveAnt = () => {\n    setGrid(currentGrid => {\n      const newGrid = currentGrid.map(row => [...row]);\n      const { x, y, direction } = antPosition;\n      \n      // Get current cell color and flip it\n      const currentColor = newGrid[y][x];\n      newGrid[y][x] = currentColor === 0 ? 1 : 0;\n      \n      // Calculate new direction\n      let newDirection = direction;\n      if (currentColor === 0) { // White square\n        newDirection = (direction + 1) % 4; // Turn right\n      } else { // Black square\n        newDirection = (direction + 3) % 4; // Turn left\n      }\n      \n      // Calculate new position\n      const newX = x + directions[newDirection][0];\n      const newY = y + directions[newDirection][1];\n      \n      // Check boundaries\n      if (newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE) {\n        setAntPosition({\n          x: newX,\n          y: newY,\n          direction: newDirection\n        });\n      }\n      \n      return newGrid;\n    });\n  };\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(moveAnt, 100);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, antPosition]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.grid}>\n        {grid.map((row, y) => (\n          <View key={y} style={styles.row}>\n            {row.map((cell, x) => (\n              <View\n                key={`${x}-${y}`}\n                style={[\n                  styles.cell,\n                  { backgroundColor: cell === 1 ? 'black' : 'white' },\n                  antPosition.x === x && antPosition.y === y && styles.ant\n                ]}\n              />\n            ))}\n          </View>\n        ))}\n      </View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => setIsRunning(!isRunning)}\n      >\n        <View style={[styles.buttonInner, isRunning && styles.buttonStop]}>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grid: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: CELL_SIZE,\n    height: CELL_SIZE,\n    borderWidth: 0.5,\n    borderColor: '#ccc',\n  },\n  ant: {\n    backgroundColor: 'red',\n  },\n  button: {\n    marginTop: 20,\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#fff',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonInner: {\n    width: 20,\n    height: 20,\n    backgroundColor: '#4CAF50',\n    borderRadius: 3,\n  },\n  buttonStop: {\n    backgroundColor: '#f44336',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}